name: Deployment - Reusable Workflow

on:
    workflow_call:
      secrets:
        k8s-kubeconfig:
          required: true
        mangodb-password:
          required: true
      
      inputs:
        mongodb-uri:
          required: true
          type: string
        kubectl-version:
          description: Provide the required kubectl version
          default: v1.27.0
          type: string
        k8s-manifest-dir:
          description: Directory containing kubernetes manifests files
          default: kubernetes/
          required: true
          type: string
        environment:
          description: Provide the deployment environment
          default: dev
          required: true
          type: string

      outputs:
        application-url:
          value: ${{ jobs.reuse-deploy.outputs.APP_INGRESS_URL }}


jobs:
    reuse-deploy:
        environment: 
            name: ${{ inputs.environment }}
            url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        outputs:
            APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.application-url }}
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4
            
            - name: Install kubectl
              uses: azure/setup-kubectl@v4
              with:
                version: ${{ inputs.kubectl-version }}
                    
            - name: Set Kubeconfig File
              uses: azure/k8s-set-context@v4
              with:
                method: kubeconfig
                kubeconfig: ${{ secrets.k8s-kubeconfig }}
            
            #kubectl config file is required in order to connect with the cluster and communicate with the cluster
            - name: fetch kubernetes cluster details
              run: |
                kubectl version --short -o yaml
                echo ---------------------
                kubectl get nodes
        
            - name: save nginx ingress controller IP as a GITHUB env var
              run: |
                    echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> "$GITHUB_ENV"
            
            - name: replace tokens in manifest files
              uses: cschleiden/replace-tokens@v1
              with:
                tokenPrefix: '_{_'
                tokenSuffix: '_}_'
                files: '["${{ inputs.k8s-manifest-dir }}*.yaml"]'
              env:
                 NAMESPACE: ${{ vars.NAMESPACE }}
                 REPLICAS: ${{ vars.REPLICAS }}
                 IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                 INGRESS_IP: ${{ env.INGRESS_IP }}
        
            
            - name: Check files
              run: |
                cat ${{ inputs.k8s-manifest-dir }}*.yaml
        
            - name: Create MangoDB Secret
              run: |
                kubectl -n ${{ vars.NAMESPACE }} create secret generic mango-db-creds \
                --from-literal=MONGO_URI=${{ inputs.mongodb-uri }} \
                --from-literal=MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
                --from-literal=PASSWORD=${{ secrets.mangodb-password }} \
                --save-config \
                --dry-run=client \
                -o yaml | kubectl apply -f -
        
            - name: Deploy to dev env
              run: |
                kubectl apply -f ${{ inputs.k8s-manifest-dir }}
            
            - name: Set App Ingress Host URL
              id: set-ingress-host-address
              run: |
                echo "APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")" >> "$GITHUB_OUTPUT"