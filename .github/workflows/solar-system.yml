name: solar system workflow

on:
    workflow_dispatch:
    push: #triggered whenever we push to the main branch or to feature/* branch
        branches:
            - main
            - 'feature/*'
#the job without env vars failed because we need to path them here.
env: 
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: unit testing
        services:
          mongo-db:
            image: mongo:4.4
            ports:
              - 27017:27017
        env:
          MANGO_URI: 'mangodb://localhost:27107/superData'
          MANGO_USERNAME: non-prod-username
          MANGO_PASSWORD: non-prod-password
        strategy:
            matrix:
                nodejs_version: [18, 19, 20]
                operating_system: [ubuntu-latest]
                exclude:
                    - nodejs_version: 18
                      operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps:
        - name: checkout repo
          uses: actions/checkout@v4
        
        - name: setup nodejs version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with: #with keyword to add aditional info.
            node-version: ${{ matrix.nodejs_version }}

        - name: install dependencies
          run: npm install

        - name: unit testing
          run: npm test

        - name: archive test result
          uses: actions/upload-artifact@v4
          with:
            name: mocha-test-result-${{ matrix.nodejs_version }}-${{ matrix.operating_system }}
            path: test-results.xml
    
    code-coverage:
        name: code coverage
        runs-on: ubuntu-latest
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
            MANGO_URI: 'mangodb://localhost:27017/superData'
            MANGO_USERNAME: non-prod-username
            MANGO_PASSWORD: non-prod-password

        strategy:
          matrix:
            nodejs_version: [18, 20]
            operating_system: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                operating_system: macos_latest
        runs-on: ${{ matrix.operating_system }}
        steps:
            - name: checkout repo
              uses: actions/checkout@v4
            
            - name: setup nodejs version - 18
              uses: actions/setup-node@v3
              with:
                node-version: 18
            
            - name: install dependencies
              run: npm install

            - name: check code coverage
              run: npm run coverage

            - name: archive test result
              uses: actions/upload-artifact@v4
              with:
                name: code-coverage-result
                path: coverage
                retention-days: 5
    
    docker:
        name: containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: checkout
          uses: actions/checkout@v4

       
    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v4
          with:
              version: 'v1.26.0'
            
        - name: Set Kubeconfig File
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
     
#kubectl config file is required in order to connect with the cluster and communicate with the cluster
        - name: fetch kubernetes cluster details
          run: |
            kubectl version --short -o yaml
            echo ---------------------
            akubectl get nodes