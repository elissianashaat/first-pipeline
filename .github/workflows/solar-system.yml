name: solar system workflow

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'

env: 
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: unit testing
        services:
          mongo-db:
            image: siddharth67/mango-db:non-prod
            ports:
              - 27017:27017
        env:
          MONGO_URI: 'mongodb://localhost:27017/superData'
          MONGO_USERNAME: non-prod-username
          MONGO_PASSWORD: non-prod-password
        strategy:
            matrix:
                nodejs_version: [18, 19, 20]
                operating_system: [ubuntu-latest]
        runs-on: ${{ matrix.operating_system }}
        steps:
        - name: checkout repo
          uses: actions/checkout@v4
        
        - name: setup nodejs version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}

        - name: install dependencies
          run: npm install

        - name: unit testing
          run: npm test

        - name: archive test result
          uses: actions/upload-artifact@v4
          with:
            name: mocha-test-result-${{ matrix.nodejs_version }}-${{ matrix.operating_system }}
            path: test-results.xml
    
    code-coverage:
        name: code coverage
        container:
          image: node:18
        services:
          mongo-db:
            image: siddharth67/mango-db:non-prod
            options:
              --name mango
        env:
            MONGO_URI: 'mongodb://mango:27017/superData'
            MONGO_USERNAME: non-prod-username
            MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v4
            
            - name: install dependencies
              run: npm install

            - name: check code coverage
              run: npm run coverage

            - name: archive test result
              uses: actions/upload-artifact@v4
              with:
                name: code-coverage-result
                path: coverage
                retention-days: 5

    docker:
        name: containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: Build Docker image
          uses: docker/build-push-action@v6.15.0
          with:
            context: .
            push: false
            tags: solar-system:${{ github.sha }}

        - name: Docker Image Test
          run: |
            docker images
            docker run --name solar-system-app -d \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              solar-system:${{ github.sha }}

            echo Testing Image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live

    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v4
          with:
              version: 'v1.26.0'

        - name: fetch kubernetes cluster details
          run: |
            kubectl version --short -o yaml
            echo ---------------------
            kubectl get nodes
