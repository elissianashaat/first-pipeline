name: solar system workflow
on:
  workflow_dispatch:
  push: #triggered whenever we push to the main branch or to feature/* branch
    branches:
      - main
      - 'feature/*'
#the job without env vars failed because we need to path them here.
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    container: #added
      image: 'node:20' #added
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm install
      - name: Unit Testing
        run: npm test
      - name: Archive Test Result
        if: always()      #added
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result
          path: test-results.xml
      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: key: '${{ runner.os }}-node-modules-${{ hashFiles("package-lock.json") }}'
  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - continue-on-error: true
        run: npm run coverage
      - uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
   
  docker:
    runs-on: ubuntu-latest
    permissions: #added
      packages: write #added
    needs:
      - code-coverage
      - unit-testing
    steps:
      - uses: actions/checkout@v4
      - name: Set lowercase repository owner
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: '${{ github.repository_owner }}'
          password: '${{ secrets.GITHUB_TOKEN }}'
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: 'ghcr.io/${{ env.REPO_OWNER_LC }}/solar-system:${{ github.sha }}'
       
  dev-deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install kubectl CLI
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.26.0'
           
      - name: Set Kubeconfig File
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
     
      #kubectl config file is required in order to connect with the cluster and communicate with the cluster
      - name: fetch kubernetes cluster details
        run: |
          kubectl version --short -o yaml
          echo ---------------------
          kubectl get nodes

      - name: save nginx ingress controller IP as a GITHUB env var
        run: |
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> "$GITHUB_ENV"
      - name: replace tokens in manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}

    
      - name: Check files
        run: |
          cat kubernetes/development/*.yaml