name: solar system workflow
on:
  workflow_dispatch:
  push: #triggered whenever we push to the main branch or to feature/* branch
    branches:
      - main
      - 'feature/*'
#the job without env vars failed because we need to path them here.
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    container: #added
      image: 'node:20' #added
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm install
      - name: Unit Testing
        run: npm test
      - name: Archive Test Result
        if: always()      #added
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result
          path: test-results.xml
      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: "${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}"
  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - continue-on-error: true
        run: npm run coverage
      - uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
   
  docker:
    runs-on: ubuntu-latest
    permissions: #added
      packages: write #added
    needs:
      - code-coverage
      - unit-testing
    steps:
      - uses: actions/checkout@v4
      - name: Set lowercase repository owner
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: '${{ github.repository_owner }}'
          password: '${{ secrets.GITHUB_TOKEN }}'
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: 'ghcr.io/${{ env.REPO_OWNER_LC }}/solar-system:${{ github.sha }}'
       
  dev-deploy:
    if: contains(github.ref, 'feature/')
    needs: docker
    uses: .github/workflows/reuse-deployment.yml
    secrets:
      k8s-kubeconfig: ${{ secrets.KUBECONFIG }}
      mangodb-password: ${{ secrets.MONGO_PASSWORD }}
    with:
      mongodb-uri: ${{ vars.MONGO_URI }}
      environment: development
      k8s-manifest-dir: kubernetes/development/

  dev-integration-test:
    name: Dev Integration Testing
    if: contains(github.ref, 'feature/')
    needs: dev-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Test URL Output using CURL and JQ
        env:
          URL: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}
        run: |
          echo $URL
          echo "-------------------------"
          curl https://$URL/live -s -k | jq -r .status | grep -i live

  prod-deploy:
    if: github.ref == 'refs/heads/main'
    needs: docker
    uses: .github/workflows/reuse-deployment.yml
    secrets:
      k8s-kubeconfig: ${{ secrets.KUBECONFIG }}
      mangodb-password: ${{ secrets.MONGO_PASSWORD }}
    with:
      mongodb-uri: ${{ vars.MONGO_URI }}
      environment: production
      k8s-manifest-dir: kubernetes/production/



  prod-integration-test:
    if: github.ref == 'refs/heads/main'
    name: prod Integration Testing
    needs: prod-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Test URL Output using CURL and JQ
        env:
          URL: ${{ needs.prod-deploy.outputs.APP_INGRESS_URL }}
        run: |
          echo $URL
          echo "-------------------------"
          curl https://$URL/live -s -k | jq -r .status | grep -i live

